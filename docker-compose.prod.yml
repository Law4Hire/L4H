version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: l4h-sqlserver-prod
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ${SQL_SA_PASSWORD}
      MSSQL_PID: Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./backups:/var/opt/mssql/backups
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P \"$$SA_PASSWORD\" -C -Q 'SELECT 1' || exit 1"]
      interval: 30s
      retries: 5
      timeout: 10s
    restart: always
    networks:
      - l4h-network

  api:
    build:
      context: .
      dockerfile: src/api/Dockerfile
    container_name: l4h-api-prod
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__SqlServer=Server=sqlserver,1433;Database=L4H;User Id=sa;Password=${SQL_SA_PASSWORD};TrustServerCertificate=True;
      - Auth__Jwt__SigningKey=${JWT_SIGNING_KEY}
      - Uploads__Token__SigningKey=${UPLOAD_TOKEN_SIGNING_KEY}
      - ADMIN_SEED_PASSWORD=${ADMIN_SEED_PASSWORD}
    ports:
      - "8765:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
    volumes:
      - ./data/uploads:/app/uploads
      - ./logs/api:/app/logs
    restart: always
    networks:
      - l4h-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  law4hire:
    build:
      context: ./web
      dockerfile: Dockerfile.prod
      target: law4hire
    container_name: l4h-web-prod
    ports:
      - "5173:80"
    depends_on:
      - api
    restart: always
    networks:
      - l4h-network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:80/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  cannlaw:
    build:
      context: ./web
      dockerfile: Dockerfile.prod
      target: cannlaw
    container_name: cannlaw-web-prod
    ports:
      - "5174:80"
    depends_on:
      - api
    restart: always
    networks:
      - l4h-network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:80/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  l4h-network:
    driver: bridge

volumes:
  sqlserver_data:
    driver: local
